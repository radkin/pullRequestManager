var search_data = {"index":{"searchIndex":["gitman","object","postprocess","pullreqman","conn()","gatheruserdata()","go()","go()","listpulls()","main()","new()","new()","new()","postcomment()","postrepostatus()","gemfile","readme","pullrequestmanager"],"longSearchIndex":["gitman","object","postprocess","pullreqman","gitman#conn()","gitman#gatheruserdata()","postprocess#go()","pullreqman#go()","gitman#listpulls()","object#main()","gitman::new()","postprocess::new()","pullreqman::new()","gitman#postcomment()","gitman#postrepostatus()","","",""],"info":[["GitMan","","GitMan.html","","<p>git management class. We do everything that is related to github here\n"],["Object","","Object.html","",""],["PostProcess","","PostProcess.html","","<p>the Post Process library gathers information from Jenkins and reports\nstatus to github enterprise. In …\n"],["PullReqMan","","PullReqMan.html","","<p>the Pull Request Manager library does all things central to our program.\nThis lib allows us to change …\n"],["conn","GitMan","GitMan.html#method-i-conn","()","<p>a wrapper for connections. Instantiate this and do everything you need\nafter\n"],["gatherUserData","GitMan","GitMan.html#method-i-gatherUserData","()","<p>you cannot the users email address from pull requests one must reference\nuser profile data\n"],["go","PostProcess","PostProcess.html#method-i-go","()","<p>Kick off the core PostProcess thread for any given pull request care and\nfeeding. This thread only stays …\n"],["go","PullReqMan","PullReqMan.html#method-i-go","()","<p>This is an atomic pullRequestManager thread.  They are consistent because\neach thread is working with …\n"],["listPulls","GitMan","GitMan.html#method-i-listPulls","()","<p>this is how we get our pull objects\n"],["main","Object","Object.html#method-i-main","()","<p>instantiate each pullRequestManager object and it’s thread starts\nimmediately after.  eventually, we …\n"],["new","GitMan","GitMan.html#method-c-new","(owner, repo)","<p>the only thing we know we need, owner and repo. All other info gathered\nwith attr_accessors above\n"],["new","PostProcess","PostProcess.html#method-c-new","(owner, repo, jenkinsJob, pullNumber)",""],["new","PullReqMan","PullReqMan.html#method-c-new","(owner, repo, jenkinsJob)",""],["postComment","GitMan","GitMan.html#method-i-postComment","()","<p>does just what it says. Uses github_api to post to and issue, which in\ngithub-land is a comment in the …\n"],["postRepoStatus","GitMan","GitMan.html#method-i-postRepoStatus","()","<p>does just what it says. Uses github_api to post to and issue, which in\ngithub-land is a comment in the …\n"],["Gemfile","","pullRequestManager/Gemfile.html","","<p>source :rubygems source “rubygems.org” source :rubyforge source\n“gems.rubyforge.org” …\n"],["readme","","pullRequestManager/readme.html","","<p>pullRequestManager\n<p>Trigger a jenkins job when there is a pull request in github the jenkins\nparams keep …\n"],["pullRequestManager","","pullRequestManager/scripts/pullRequestManager.html","","<p>#!/bin/bash # # chkconfig: 345 99 05 # description: Java deamon script # #\nA non-SUSE Linux start/stop …\n"]]}}